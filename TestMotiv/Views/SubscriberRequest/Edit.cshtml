@using TestMotiv.DTO

@model SubscriberRequestDto

<h2>Редактирование обращения</h2>

<form method="post">
    <div class="form-group">
        @Html.LabelFor(i => i.Phone)
        @Html.TextBoxFor(i => i.Phone, new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(i => i.DepartmentId)
        @Html.DropDownListFor(i => i.DepartmentId, new SelectList(new List<KeyValuePair<string, string>>()), new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(i => i.CountryName)
        @Html.TextBoxFor(i => i.CountryName, new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(i => i.RegionName)
        @Html.TextBoxFor(i => i.RegionName, new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(i => i.CityName)
        @Html.TextBoxFor(i => i.CityName, new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(i => i.RequestReason)
        @Html.TextAreaFor(i => i.RequestReason, new {@class = "form-control"})
    </div>
    <div class="form-group">
        <input type="submit" value="Применить" class="btn btn-block btn-success">
    </div>
</form>

@section scripts
{
    <script>
    $(() => {
        const selector = '#@nameof(SubscriberRequestDto.DepartmentId)';
        const url = '@Url.Action("List", "Department")';
        const value = '@Model.DepartmentId';
        setDropDownValue(selector, url, value);
    });
    </script>
}
